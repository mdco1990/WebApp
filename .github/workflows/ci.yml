name: CI

on:
  push:
    branches:
      - main
      - master
      - develop
      - feature/**
  pull_request:
    branches:
      - main
      - master
      - develop
      - feature/**

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  go-lint:
    name: Go Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Go module cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v1.62.2
          args: --timeout=4m

  go-test:
    name: Go Test
    runs-on: ubuntu-latest
    needs: go-lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Go module cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run unit tests
        run: go test -v -race -coverprofile=coverage.out ./...
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.out
          fail_ci_if_error: false

  web-lint:
    name: Web Lint
    runs-on: ubuntu-latest
    env:
      VITE_ALLOWED_HOSTS: ${{ vars.VITE_ALLOWED_HOSTS || 'localhost,127.0.0.1' }}
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
      - name: Install deps
        run: |
          npm ci || npm install --no-audit --no-fund
      - name: ESLint
        run: npm run lint
      - name: Stylelint
        run: npm run lint:css
      - name: Prettier check
        run: npm run format:check

  web-build:
    name: Web Build
    runs-on: ubuntu-latest
    needs: web-lint
    env:
      VITE_ALLOWED_HOSTS: ${{ vars.VITE_ALLOWED_HOSTS || 'localhost,127.0.0.1' }}
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
      - name: Install deps
        run: |
          npm ci || npm install --no-audit --no-fund
      - name: Build
        run: npm run build
        
  web-test:
    name: Web Test
    runs-on: ubuntu-latest
    needs: web-lint
    env:
      VITE_ALLOWED_HOSTS: ${{ vars.VITE_ALLOWED_HOSTS || 'localhost,127.0.0.1' }}
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
      - name: Install deps
        run: |
          npm ci || npm install --no-audit --no-fund
      - name: Run tests
        run: npm test -- --coverage --watchAll=false
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          directory: ./web/coverage
          fail_ci_if_error: false

  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    needs: [go-test, web-test, web-build]
    if: always()
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
