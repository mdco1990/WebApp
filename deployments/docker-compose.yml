services:
  # Main API service - Development mode with live reloading
  api:
    build:
      context: ..
      dockerfile: deployments/Docker/Dockerfile.api
      target: dev
    image: webapp-api-dev:local
    container_name: webapp-api-dev
    platform: linux/arm64
    working_dir: /app
    volumes:
      - ..:/app
      - webapp_cache:/go/pkg/mod  # Go module cache
      - ../data:/db  # persist DB file on host for dev
    environment:
      - HTTP_ADDRESS=0.0.0.0:8082
      - DB_DRIVER=sqlite
      - DB_PATH=/db/app.db
      - CORS_ALLOWED_ORIGINS=http://web:5173,http://localhost:5173,http://instance-agent.subnet05071228.vcn05071228.oraclevcn.com:5173
      - ENV=dev
      - LOG_LEVEL=debug
      - LOG_FORMAT=text
      - GOFLAGS=-buildvcs=false
    command: ["air", "-c", ".air.toml"]
    depends_on:
      db:
        condition: service_started
    networks:
      - webapp-network
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8082/healthz >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

  # SQLite database service for development
  db:
    image: arm64v8/alpine:3.19
    container_name: webapp-db-dev
    platform: linux/arm64
    command: sh -c "apk add --no-cache sqlite sqlite-libs >/dev/null 2>&1 && sqlite3 /db/app.db 'PRAGMA user_version;' || true; tail -f /dev/null"
    volumes:
      - ../data:/db  # same host folder as API for persistence
    networks:
      - webapp-network
    healthcheck:
      test: ["CMD-SHELL", "sqlite3 /db/app.db 'PRAGMA user_version;' >/dev/null 2>&1 || sqlite3 /db/app.db '.databases' >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Frontend React/TypeScript application
  web:
    build:
      context: ..
      dockerfile: deployments/Docker/Dockerfile.web
      target: dev
    image: webapp-web-dev:local
    container_name: webapp-web
    platform: linux/arm64
    working_dir: /app/web
    env_file:
      - ../web/.env.dev
    volumes:
      - ../web:/app/web
      - webapp_node_modules:/app/web/node_modules
    environment:
      - NODE_ENV=development
      - VITE_PROXY_TARGET=http://api:8082
    command: ["sh", "-c", "npm ci || npm install && npm run dev -- --host 0.0.0.0 --port 5173"]
    ports:
      - "5173:5173"
    networks:
      - webapp-network
    depends_on:
      api:
        condition: service_healthy

  # SQLite Admin UI (always on in dev)
  sqlite-admin:
    build:
      context: ..
      dockerfile: deployments/Docker/Dockerfile.sqlite-admin
    image: webapp-sqlite-admin:local
    container_name: webapp-sqlite-admin
    platform: linux/arm64
    working_dir: /app
    volumes:
      - ../data:/db  # same host folder as API for persistence
    command: ["sqlite_web", "--host", "0.0.0.0", "--port", "8080", "/db/app.db"]
    networks:
      - webapp-network
    depends_on:
      db:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8080 >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

volumes:
  webapp_cache:
  webapp_node_modules:

networks:
  webapp-network:
    driver: bridge
