events {
    worker_connections 1024;
}

http {
    upstream web {
        server web:5173;
    }

    upstream api {
        server api:8082;
    }

    upstream sqlite-admin {
        server sqlite-admin:8080;
    }

    # HTTP server - redirect to HTTPS
    server {
        listen 31080;
        server_name localhost instance-agent.subnet05071228.vcn05071228.oraclevcn.com;
        return 301 https://$host:31443$request_uri;
    }

    # HTTPS server
    server {
        listen 31443 ssl;
        server_name localhost instance-agent.subnet05071228.vcn05071228.oraclevcn.com;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # SQLite Admin UI - proxy directly to sqlite-admin container
        location /db-admin/ {
            proxy_pass http://sqlite-admin/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Prefix /db-admin;
            
            # Handle subdirectories properly
            proxy_redirect off;
            proxy_buffering off;
            
            # Rewrite URLs in responses to maintain /db-admin/ prefix
            sub_filter_once off;
            sub_filter 'href="/' 'href="/db-admin/';
            sub_filter 'src="/' 'src="/db-admin/';
            sub_filter 'action="/' 'action="/db-admin/';
            sub_filter 'url("/' 'url("/db-admin/';
            sub_filter 'location.href="/' 'location.href="/db-admin/';
            sub_filter 'window.location="/' 'window.location="/db-admin/';
            sub_filter 'location="/' 'location="/db-admin/';
        }

        # Catch SQLite Admin UI direct routes (like /budget/, /table/, etc.)
        # These are generated by sqlite-web when accessed through proxy
        location ~ ^/(budget|expense|income_sources|budget_sources|manual_budget_items|manual_budgets|salary|sessions|sqlite_sequence|users|table|static|favicon\.ico)/ {
            # Redirect to /db-admin/ prefix to maintain consistency
            rewrite ^/(.*)$ /db-admin/$1 permanent;
        }

        # API routes - proxy to backend
        location /api/ {
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /auth/ {
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /healthz {
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /docs/ {
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /openapi.json {
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /redoc/ {
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /rapidoc/ {
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /scalar/ {
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Frontend routes - proxy to web service
        location / {
            proxy_pass http://web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Vite HMR
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}
